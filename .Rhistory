# setDT(dft)
# dft[,bins:=apply_quantiles(tweet_norm)]
#dft[, list(ret = mean(factor_norm)), by=list(bins)] %>% arrange(bins)
# google
table26
# dfw <- data.frame(dfw, Date=index(dfw))
# dfw[,weekly_ret:=weekly.returns, by=list(Date)]
# dfw
#df_google <- df_google[, google_norm:= BBmisc::normalize(google,method = "range", range=c(-1,1))]
dft
#dfw <- dfw[, weekly_ret:= BBmisc::normalize(weekly_ret,method = "range", range=c(-1,1))]
for (i in 1:7){
dfw[, paste('weekly_ret_lead',paste(i),sep=""):=shift(weekly_ret, n=i, fill = NA, type='lead')]
#df_weekly[, paste('ret_lag',paste(i),sep=""):=shift(weekly_ret, n=i, fill = NA, type='lag')]
}
dft<-merge(dfw, df_google, by='Date')
quant_summary = list()
model_results4 = list()
#qs = c(0.17, 0.33, 0.5, 0.67, 0.83)
#qs = c(0,0.2, 0.4, 0.6, 0.8)
#qs = c(0.2,0.4, 0.6, 0.8, 1)
# dft <- dft[, weekly_ret_lead1:= BBmisc::normalize(weekly_ret_lead1,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead2:= BBmisc::normalize(weekly_ret_lead2,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead3:= BBmisc::normalize(weekly_ret_lead3,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead4:= BBmisc::normalize(weekly_ret_lead4,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead5:= BBmisc::normalize(weekly_ret_lead5,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead6:= BBmisc::normalize(weekly_ret_lead6,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead7:= BBmisc::normalize(weekly_ret_lead7,method = "range", range=c(-1,1))]
eval(paste('weekly_ret_lead',paste(i)))
for(i in 1:7){
#f <- as.formula(paste('ret ~ ret_lead',paste(i), sep=""))
f <- as.formula(paste('weekly_ret_lead',paste(i), '~ google_norm', sep=""))
#f <- as.formula(paste('weekly_ret_lead4 ~ tweet_norm', sep=""))
m = lm(f, data= dft)
model_results4[[i]] = m
}
#quantile(dft$google_norm)
stargazer(model_results4, header=F, type='text',
title=paste('Google Search - Bitcoin (', paste(min(dft$Date)),'-',paste(max(dft$Date)),')'),
omit.stat = c("LL","ser","f"),
covariate.labels =c('Google(t)'),
dep.var.labels=c('R(t+1)', 'R(t+2)', 'R(t+3)', 'R(t+4)','R(t+5)','R(t+6)','R(t+7)'),
omit='Constant',
report = "vc*pt", flip=TRUE)
ggplot(dft, aes(x=Date)) +
geom_line(aes(y = dft$weekly_ret), color = "darkred") +
geom_line(aes(y = dft$google_norm), color="blue", linetype="twodash")
#geom_line(aes(y = dft$tweet_norm), color="green", linetype="twodash")
# google
table26
# dfw <- data.frame(dfw, Date=index(dfw))
# dfw[,weekly_ret:=weekly.returns, by=list(Date)]
# dfw
#df_google <- df_google[, google_norm:= BBmisc::normalize(google,method = "range", range=c(-1,1))]
dft
#dfw <- dfw[, weekly_ret:= BBmisc::normalize(weekly_ret,method = "range", range=c(-1,1))]
for (i in 1:7){
dfw[, paste('weekly_ret_lead',paste(i),sep=""):=shift(weekly_ret, n=i, fill = NA, type='lead')]
#df_weekly[, paste('ret_lag',paste(i),sep=""):=shift(weekly_ret, n=i, fill = NA, type='lag')]
}
dft<-merge(dfw, df_google, by='Date')
quant_summary = list()
model_results4 = list()
#qs = c(0.17, 0.33, 0.5, 0.67, 0.83)
#qs = c(0,0.2, 0.4, 0.6, 0.8)
#qs = c(0.2,0.4, 0.6, 0.8, 1)
# dft <- dft[, weekly_ret_lead1:= BBmisc::normalize(weekly_ret_lead1,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead2:= BBmisc::normalize(weekly_ret_lead2,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead3:= BBmisc::normalize(weekly_ret_lead3,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead4:= BBmisc::normalize(weekly_ret_lead4,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead5:= BBmisc::normalize(weekly_ret_lead5,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead6:= BBmisc::normalize(weekly_ret_lead6,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead7:= BBmisc::normalize(weekly_ret_lead7,method = "range", range=c(-1,1))]
eval(paste('weekly_ret_lead',paste(i)))
for(i in 1:7){
#f <- as.formula(paste('ret ~ ret_lead',paste(i), sep=""))
f <- as.formula(paste('weekly_ret_lead',paste(i), '~ google_norm', sep=""))
#f <- as.formula(paste('weekly_ret_lead4 ~ tweet_norm', sep=""))
m = lm(f, data= dft)
model_results4[[i]] = m
}
#quantile(dft$google_norm)
stargazer(model_results4, header=F, type='text',
title=paste('Google Search - Bitcoin (', paste(min(dft$Date)),'-',paste(max(dft$Date)),')'),
omit.stat = c("LL","ser","f"),
covariate.labels =c('Google(t)'),
dep.var.labels=c('R(t+1)', 'R(t+2)', 'R(t+3)', 'R(t+4)','R(t+5)','R(t+6)','R(t+7)'),
omit='Constant',
report = "vc*pt", flip=TRUE)
ggplot(dft, aes(x=Date)) +
geom_line(aes(y = dft$weekly_ret1), color = "darkred") +
geom_line(aes(y = dft$google_norm), color="blue", linetype="twodash")
ggplot(dft, aes(x=Date)) +
geom_line(aes(y = dft$weekly_ret_lead1), color = "darkred") +
geom_line(aes(y = dft$google_norm), color="blue", linetype="twodash")
ggplot(dft, aes(x=Date)) +
geom_line(aes(y = dft$weekly_ret_lead2), color = "darkred") +
geom_line(aes(y = dft$google_norm), color="blue", linetype="twodash")
df_google = read.csv('daily_gtrends.csv')
df_google$Date = ymd(df_google$date)
df_google <- subset(df_google, Date >= as.Date('2011-1-1'))
df_google <- subset(df_google, Date <= as.Date('2017-05-31'))
df_google <- df_google %>% mutate(day = wday(Date, week_start = getOption("lubridate.week.start", 7)))
df_google <- df_google %>% mutate(week = cut.Date(Date, breaks='1 week', label=FALSE))
#df_tweets <- df_tweets[, cum:=cumsum(Count)] %>% filter(day == 1)
df_google <- df_google %>% group_by(week) %>% mutate(cum = cumsum(bitcoin)) %>% filter(day == 1)
setDT(df_google)
#df_google <- df_google[,bitcoin:=ifelse(bitcoin==0,0,log(bitcoin))]
df_google
for (i in 1:4){
df_google[, paste('cum_lag',paste(i),sep=''):= shift(bitcoin, n=i, fill=NA, type='lag')]
}
df_google[, avg:=sum(cum_lag1+cum_lag2+cum_lag3+cum_lag4,na.rm = TRUE)/4, by=list(Date)]
# calculate the tweet factor count(t) - average(count(t-1 to t-4))
df_google[, google:=ifelse(avg!=0,cum-avg, 0), by=list(Date)]
setDT(df_google)
# normalize to range -1 to 1
#df_google[, google_norm:= BBmisc::normalize(google,method = "standardize")]
df_google <- df_google[, google_norm:= BBmisc::normalize(google,method = "range", range=c(-1,1))]
dfw
qplot(data=df_google, x=Date, y=google_norm,geom = 'line')
#qplot(data=dfw, x=Date, y=weekly_ret,geom = 'line')
#describe(df_google$google_norm)
# google
table26
# dfw <- data.frame(dfw, Date=index(dfw))
# dfw[,weekly_ret:=weekly.returns, by=list(Date)]
# dfw
#df_google <- df_google[, google_norm:= BBmisc::normalize(google,method = "range", range=c(-1,1))]
dft
#dfw <- dfw[, weekly_ret:= BBmisc::normalize(weekly_ret,method = "range", range=c(-1,1))]
for (i in 1:7){
dfw[, paste('weekly_ret_lead',paste(i),sep=""):=shift(weekly_ret, n=i, fill = NA, type='lead')]
#df_weekly[, paste('ret_lag',paste(i),sep=""):=shift(weekly_ret, n=i, fill = NA, type='lag')]
}
dft<-merge(dfw, df_google, by='Date')
quant_summary = list()
model_results4 = list()
#qs = c(0.17, 0.33, 0.5, 0.67, 0.83)
#qs = c(0,0.2, 0.4, 0.6, 0.8)
#qs = c(0.2,0.4, 0.6, 0.8, 1)
# dft <- dft[, weekly_ret_lead1:= BBmisc::normalize(weekly_ret_lead1,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead2:= BBmisc::normalize(weekly_ret_lead2,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead3:= BBmisc::normalize(weekly_ret_lead3,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead4:= BBmisc::normalize(weekly_ret_lead4,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead5:= BBmisc::normalize(weekly_ret_lead5,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead6:= BBmisc::normalize(weekly_ret_lead6,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead7:= BBmisc::normalize(weekly_ret_lead7,method = "range", range=c(-1,1))]
eval(paste('weekly_ret_lead',paste(i)))
for(i in 1:7){
#f <- as.formula(paste('ret ~ ret_lead',paste(i), sep=""))
f <- as.formula(paste('weekly_ret_lead',paste(i), '~ google_norm', sep=""))
#f <- as.formula(paste('weekly_ret_lead4 ~ tweet_norm', sep=""))
m = lm(f, data= dft)
model_results4[[i]] = m
}
#quantile(dft$google_norm)
stargazer(model_results4, header=F, type='text',
title=paste('Google Search - Bitcoin (', paste(min(dft$Date)),'-',paste(max(dft$Date)),')'),
omit.stat = c("LL","ser","f"),
covariate.labels =c('Google(t)'),
dep.var.labels=c('R(t+1)', 'R(t+2)', 'R(t+3)', 'R(t+4)','R(t+5)','R(t+6)','R(t+7)'),
omit='Constant',
report = "vc*pt", flip=TRUE)
ggplot(dft, aes(x=Date)) +
geom_line(aes(y = dft$weekly_ret_lead2), color = "darkred") +
geom_line(aes(y = dft$google_norm), color="blue", linetype="twodash")
#geom_line(aes(y = dft$tweet_norm), color="green", linetype="twodash")
df_google = read.csv('daily_gtrends.csv')
df_google$Date = ymd(df_google$date)
df_google <- subset(df_google, Date >= as.Date('2012-1-1'))
df_google <- subset(df_google, Date <= as.Date('2017-05-31'))
df_google <- df_google %>% mutate(day = wday(Date, week_start = getOption("lubridate.week.start", 7)))
df_google <- df_google %>% mutate(week = cut.Date(Date, breaks='1 week', label=FALSE))
#df_tweets <- df_tweets[, cum:=cumsum(Count)] %>% filter(day == 1)
df_google <- df_google %>% group_by(week) %>% mutate(cum = cumsum(bitcoin)) %>% filter(day == 1)
setDT(df_google)
#df_google <- df_google[,bitcoin:=ifelse(bitcoin==0,0,log(bitcoin))]
df_google
for (i in 1:4){
df_google[, paste('cum_lag',paste(i),sep=''):= shift(bitcoin, n=i, fill=NA, type='lag')]
}
df_google[, avg:=sum(cum_lag1+cum_lag2+cum_lag3+cum_lag4,na.rm = TRUE)/4, by=list(Date)]
# calculate the tweet factor count(t) - average(count(t-1 to t-4))
df_google[, google:=ifelse(avg!=0,cum-avg, 0), by=list(Date)]
setDT(df_google)
# normalize to range -1 to 1
#df_google[, google_norm:= BBmisc::normalize(google,method = "standardize")]
df_google <- df_google[, google_norm:= BBmisc::normalize(google,method = "range", range=c(-1,1))]
dfw
qplot(data=df_google, x=Date, y=google_norm,geom = 'line')
#qplot(data=dfw, x=Date, y=weekly_ret,geom = 'line')
#describe(df_google$google_norm)
df_google = read.csv('daily_gtrends.csv')
df_google$Date = ymd(df_google$date)
df_google <- subset(df_google, Date >= as.Date('2012-1-1'))
df_google <- subset(df_google, Date <= as.Date('2017-12-31'))
df_google <- df_google %>% mutate(day = wday(Date, week_start = getOption("lubridate.week.start", 7)))
df_google <- df_google %>% mutate(week = cut.Date(Date, breaks='1 week', label=FALSE))
#df_tweets <- df_tweets[, cum:=cumsum(Count)] %>% filter(day == 1)
df_google <- df_google %>% group_by(week) %>% mutate(cum = cumsum(bitcoin)) %>% filter(day == 1)
setDT(df_google)
#df_google <- df_google[,bitcoin:=ifelse(bitcoin==0,0,log(bitcoin))]
df_google
for (i in 1:4){
df_google[, paste('cum_lag',paste(i),sep=''):= shift(bitcoin, n=i, fill=NA, type='lag')]
}
df_google[, avg:=sum(cum_lag1+cum_lag2+cum_lag3+cum_lag4,na.rm = TRUE)/4, by=list(Date)]
# calculate the tweet factor count(t) - average(count(t-1 to t-4))
df_google[, google:=ifelse(avg!=0,cum-avg, 0), by=list(Date)]
setDT(df_google)
# normalize to range -1 to 1
#df_google[, google_norm:= BBmisc::normalize(google,method = "standardize")]
df_google <- df_google[, google_norm:= BBmisc::normalize(google,method = "range", range=c(-1,1))]
dfw
qplot(data=df_google, x=Date, y=google_norm,geom = 'line')
#qplot(data=dfw, x=Date, y=weekly_ret,geom = 'line')
#describe(df_google$google_norm)
# google
table26
# dfw <- data.frame(dfw, Date=index(dfw))
# dfw[,weekly_ret:=weekly.returns, by=list(Date)]
# dfw
#df_google <- df_google[, google_norm:= BBmisc::normalize(google,method = "range", range=c(-1,1))]
dft
#dfw <- dfw[, weekly_ret:= BBmisc::normalize(weekly_ret,method = "range", range=c(-1,1))]
for (i in 1:7){
dfw[, paste('weekly_ret_lead',paste(i),sep=""):=shift(weekly_ret, n=i, fill = NA, type='lead')]
#df_weekly[, paste('ret_lag',paste(i),sep=""):=shift(weekly_ret, n=i, fill = NA, type='lag')]
}
dft<-merge(dfw, df_google, by='Date')
quant_summary = list()
model_results4 = list()
#qs = c(0.17, 0.33, 0.5, 0.67, 0.83)
#qs = c(0,0.2, 0.4, 0.6, 0.8)
#qs = c(0.2,0.4, 0.6, 0.8, 1)
# dft <- dft[, weekly_ret_lead1:= BBmisc::normalize(weekly_ret_lead1,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead2:= BBmisc::normalize(weekly_ret_lead2,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead3:= BBmisc::normalize(weekly_ret_lead3,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead4:= BBmisc::normalize(weekly_ret_lead4,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead5:= BBmisc::normalize(weekly_ret_lead5,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead6:= BBmisc::normalize(weekly_ret_lead6,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead7:= BBmisc::normalize(weekly_ret_lead7,method = "range", range=c(-1,1))]
eval(paste('weekly_ret_lead',paste(i)))
for(i in 1:7){
#f <- as.formula(paste('ret ~ ret_lead',paste(i), sep=""))
f <- as.formula(paste('weekly_ret_lead',paste(i), '~ google_norm', sep=""))
#f <- as.formula(paste('weekly_ret_lead4 ~ tweet_norm', sep=""))
m = lm(f, data= dft)
model_results4[[i]] = m
}
#quantile(dft$google_norm)
stargazer(model_results4, header=F, type='text',
title=paste('Google Search - Bitcoin (', paste(min(dft$Date)),'-',paste(max(dft$Date)),')'),
omit.stat = c("LL","ser","f"),
covariate.labels =c('Google(t)'),
dep.var.labels=c('R(t+1)', 'R(t+2)', 'R(t+3)', 'R(t+4)','R(t+5)','R(t+6)','R(t+7)'),
omit='Constant',
report = "vc*pt", flip=TRUE)
ggplot(dft, aes(x=Date)) +
geom_line(aes(y = dft$weekly_ret_lead2), color = "darkred") +
geom_line(aes(y = dft$google_norm), color="blue", linetype="twodash")
#geom_line(aes(y = dft$tweet_norm), color="green", linetype="twodash")
# google
table26
# dfw <- data.frame(dfw, Date=index(dfw))
# dfw[,weekly_ret:=weekly.returns, by=list(Date)]
# dfw
#df_google <- df_google[, google_norm:= BBmisc::normalize(google,method = "range", range=c(-1,1))]
dft
#dfw <- dfw[, weekly_ret:= BBmisc::normalize(weekly_ret,method = "range", range=c(-1,1))]
for (i in 1:7){
dfw[, paste('weekly_ret_lead',paste(i),sep=""):=shift(weekly_ret, n=i, fill = NA, type='lead')]
#df_weekly[, paste('ret_lag',paste(i),sep=""):=shift(weekly_ret, n=i, fill = NA, type='lag')]
}
dft<-merge(dfw, df_google, by='Date')
quant_summary = list()
model_results4 = list()
#qs = c(0.17, 0.33, 0.5, 0.67, 0.83)
#qs = c(0,0.2, 0.4, 0.6, 0.8)
#qs = c(0.2,0.4, 0.6, 0.8, 1)
# dft <- dft[, weekly_ret_lead1:= BBmisc::normalize(weekly_ret_lead1,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead2:= BBmisc::normalize(weekly_ret_lead2,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead3:= BBmisc::normalize(weekly_ret_lead3,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead4:= BBmisc::normalize(weekly_ret_lead4,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead5:= BBmisc::normalize(weekly_ret_lead5,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead6:= BBmisc::normalize(weekly_ret_lead6,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead7:= BBmisc::normalize(weekly_ret_lead7,method = "range", range=c(-1,1))]
eval(paste('weekly_ret_lead',paste(i)))
for(i in 1:7){
#f <- as.formula(paste('ret ~ ret_lead',paste(i), sep=""))
f <- as.formula(paste('weekly_ret',paste(i), '~ google_norm', sep=""))
#f <- as.formula(paste('weekly_ret_lead4 ~ tweet_norm', sep=""))
m = lm(f, data= dft)
model_results4[[i]] = m
}
#f <- as.formula(paste('ret ~ ret_lead',paste(i), sep=""))
f <- as.formula(paste('weekly_ret ~ google_norm', sep=""))
# google
table26
# dfw <- data.frame(dfw, Date=index(dfw))
# dfw[,weekly_ret:=weekly.returns, by=list(Date)]
# dfw
#df_google <- df_google[, google_norm:= BBmisc::normalize(google,method = "range", range=c(-1,1))]
dft
#dfw <- dfw[, weekly_ret:= BBmisc::normalize(weekly_ret,method = "range", range=c(-1,1))]
for (i in 1:7){
dfw[, paste('weekly_ret_lead',paste(i),sep=""):=shift(weekly_ret, n=i, fill = NA, type='lead')]
#df_weekly[, paste('ret_lag',paste(i),sep=""):=shift(weekly_ret, n=i, fill = NA, type='lag')]
}
dft<-merge(dfw, df_google, by='Date')
quant_summary = list()
model_results4 = list()
#qs = c(0.17, 0.33, 0.5, 0.67, 0.83)
#qs = c(0,0.2, 0.4, 0.6, 0.8)
#qs = c(0.2,0.4, 0.6, 0.8, 1)
# dft <- dft[, weekly_ret_lead1:= BBmisc::normalize(weekly_ret_lead1,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead2:= BBmisc::normalize(weekly_ret_lead2,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead3:= BBmisc::normalize(weekly_ret_lead3,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead4:= BBmisc::normalize(weekly_ret_lead4,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead5:= BBmisc::normalize(weekly_ret_lead5,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead6:= BBmisc::normalize(weekly_ret_lead6,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead7:= BBmisc::normalize(weekly_ret_lead7,method = "range", range=c(-1,1))]
eval(paste('weekly_ret_lead',paste(i)))
for(i in 1:7){
#f <- as.formula(paste('ret ~ ret_lead',paste(i), sep=""))
f <- as.formula(paste('weekly_ret ~ google_norm', sep=""))
#f <- as.formula(paste('weekly_ret_lead',paste(i), '~ google_norm', sep=""))
#f <- as.formula(paste('weekly_ret_lead4 ~ tweet_norm', sep=""))
m = lm(f, data= dft)
model_results4[[i]] = m
}
#quantile(dft$google_norm)
stargazer(model_results4, header=F, type='text',
title=paste('Google Search - Bitcoin (', paste(min(dft$Date)),'-',paste(max(dft$Date)),')'),
omit.stat = c("LL","ser","f"),
covariate.labels =c('Google(t)'),
dep.var.labels=c('R(t+1)', 'R(t+2)', 'R(t+3)', 'R(t+4)','R(t+5)','R(t+6)','R(t+7)'),
omit='Constant',
report = "vc*pt", flip=TRUE)
ggplot(dft, aes(x=Date)) +
geom_line(aes(y = dft$weekly_ret_lead2), color = "darkred") +
geom_line(aes(y = dft$google_norm), color="blue", linetype="twodash")
#geom_line(aes(y = dft$tweet_norm), color="green", linetype="twodash")
# google
table26
# dfw <- data.frame(dfw, Date=index(dfw))
# dfw[,weekly_ret:=weekly.returns, by=list(Date)]
# dfw
#df_google <- df_google[, google_norm:= BBmisc::normalize(google,method = "range", range=c(-1,1))]
dft
#dfw <- dfw[, weekly_ret:= BBmisc::normalize(weekly_ret,method = "range", range=c(-1,1))]
for (i in 1:7){
dfw[, paste('weekly_ret_lead',paste(i),sep=""):=shift(weekly_ret, n=i, fill = NA, type='lead')]
#df_weekly[, paste('ret_lag',paste(i),sep=""):=shift(weekly_ret, n=i, fill = NA, type='lag')]
}
dft<-merge(dfw, df_google, by='Date')
quant_summary = list()
model_results4 = list()
#qs = c(0.17, 0.33, 0.5, 0.67, 0.83)
#qs = c(0,0.2, 0.4, 0.6, 0.8)
#qs = c(0.2,0.4, 0.6, 0.8, 1)
# dft <- dft[, weekly_ret_lead1:= BBmisc::normalize(weekly_ret_lead1,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead2:= BBmisc::normalize(weekly_ret_lead2,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead3:= BBmisc::normalize(weekly_ret_lead3,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead4:= BBmisc::normalize(weekly_ret_lead4,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead5:= BBmisc::normalize(weekly_ret_lead5,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead6:= BBmisc::normalize(weekly_ret_lead6,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead7:= BBmisc::normalize(weekly_ret_lead7,method = "range", range=c(-1,1))]
eval(paste('weekly_ret_lead',paste(i)))
for(i in 1:7){
#f <- as.formula(paste('ret ~ ret_lead',paste(i), sep=""))
f <- as.formula(paste('google_norm~ weekly_ret ', sep=""))
#f <- as.formula(paste('weekly_ret_lead',paste(i), '~ google_norm', sep=""))
#f <- as.formula(paste('weekly_ret_lead4 ~ tweet_norm', sep=""))
m = lm(f, data= dft)
model_results4[[i]] = m
}
#quantile(dft$google_norm)
stargazer(model_results4, header=F, type='text',
title=paste('Google Search - Bitcoin (', paste(min(dft$Date)),'-',paste(max(dft$Date)),')'),
omit.stat = c("LL","ser","f"),
covariate.labels =c('Google(t)'),
dep.var.labels=c('R(t+1)', 'R(t+2)', 'R(t+3)', 'R(t+4)','R(t+5)','R(t+6)','R(t+7)'),
omit='Constant',
report = "vc*pt", flip=TRUE)
ggplot(dft, aes(x=Date)) +
geom_line(aes(y = dft$weekly_ret_lead2), color = "darkred") +
geom_line(aes(y = dft$google_norm), color="blue", linetype="twodash")
#geom_line(aes(y = dft$tweet_norm), color="green", linetype="twodash")
# google
table26
# dfw <- data.frame(dfw, Date=index(dfw))
# dfw[,weekly_ret:=weekly.returns, by=list(Date)]
# dfw
#df_google <- df_google[, google_norm:= BBmisc::normalize(google,method = "range", range=c(-1,1))]
dft
#dfw <- dfw[, weekly_ret:= BBmisc::normalize(weekly_ret,method = "range", range=c(-1,1))]
for (i in 1:7){
dfw[, paste('weekly_ret_lead',paste(i),sep=""):=shift(weekly_ret, n=i, fill = NA, type='lead')]
#df_weekly[, paste('ret_lag',paste(i),sep=""):=shift(weekly_ret, n=i, fill = NA, type='lag')]
}
dft<-merge(dfw, df_google, by='Date')
quant_summary = list()
model_results4 = list()
#qs = c(0.17, 0.33, 0.5, 0.67, 0.83)
#qs = c(0,0.2, 0.4, 0.6, 0.8)
#qs = c(0.2,0.4, 0.6, 0.8, 1)
# dft <- dft[, weekly_ret_lead1:= BBmisc::normalize(weekly_ret_lead1,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead2:= BBmisc::normalize(weekly_ret_lead2,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead3:= BBmisc::normalize(weekly_ret_lead3,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead4:= BBmisc::normalize(weekly_ret_lead4,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead5:= BBmisc::normalize(weekly_ret_lead5,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead6:= BBmisc::normalize(weekly_ret_lead6,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead7:= BBmisc::normalize(weekly_ret_lead7,method = "range", range=c(-1,1))]
eval(paste('weekly_ret_lead',paste(i)))
for(i in 1:7){
#f <- as.formula(paste('ret ~ ret_lead',paste(i), sep=""))
f <- as.formula(paste('google_norm~ ','weekly_ret_lead',paste(i)', sep=""))
#f <- as.formula(paste('weekly_ret_lead',paste(i), '~ google_norm', sep=""))
# google
table26
# dfw <- data.frame(dfw, Date=index(dfw))
# dfw[,weekly_ret:=weekly.returns, by=list(Date)]
# dfw
#df_google <- df_google[, google_norm:= BBmisc::normalize(google,method = "range", range=c(-1,1))]
dft
#dfw <- dfw[, weekly_ret:= BBmisc::normalize(weekly_ret,method = "range", range=c(-1,1))]
for (i in 1:7){
dfw[, paste('weekly_ret_lead',paste(i),sep=""):=shift(weekly_ret, n=i, fill = NA, type='lead')]
#df_weekly[, paste('ret_lag',paste(i),sep=""):=shift(weekly_ret, n=i, fill = NA, type='lag')]
}
dft<-merge(dfw, df_google, by='Date')
quant_summary = list()
model_results4 = list()
#qs = c(0.17, 0.33, 0.5, 0.67, 0.83)
#qs = c(0,0.2, 0.4, 0.6, 0.8)
#qs = c(0.2,0.4, 0.6, 0.8, 1)
# dft <- dft[, weekly_ret_lead1:= BBmisc::normalize(weekly_ret_lead1,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead2:= BBmisc::normalize(weekly_ret_lead2,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead3:= BBmisc::normalize(weekly_ret_lead3,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead4:= BBmisc::normalize(weekly_ret_lead4,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead5:= BBmisc::normalize(weekly_ret_lead5,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead6:= BBmisc::normalize(weekly_ret_lead6,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead7:= BBmisc::normalize(weekly_ret_lead7,method = "range", range=c(-1,1))]
eval(paste('weekly_ret_lead',paste(i)))
for(i in 1:7){
#f <- as.formula(paste('ret ~ ret_lead',paste(i), sep=""))
f <- as.formula(paste('google_norm~ ','weekly_ret_lead',paste(i), sep=""))
#f <- as.formula(paste('weekly_ret_lead',paste(i), '~ google_norm', sep=""))
#f <- as.formula(paste('weekly_ret_lead4 ~ tweet_norm', sep=""))
m = lm(f, data= dft)
model_results4[[i]] = m
}
#quantile(dft$google_norm)
stargazer(model_results4, header=F, type='text',
title=paste('Google Search - Bitcoin (', paste(min(dft$Date)),'-',paste(max(dft$Date)),')'),
omit.stat = c("LL","ser","f"),
covariate.labels =c('Google(t)'),
dep.var.labels=c('R(t+1)', 'R(t+2)', 'R(t+3)', 'R(t+4)','R(t+5)','R(t+6)','R(t+7)'),
omit='Constant',
report = "vc*pt", flip=TRUE)
ggplot(dft, aes(x=Date)) +
geom_line(aes(y = dft$weekly_ret_lead2), color = "darkred") +
geom_line(aes(y = dft$google_norm), color="blue", linetype="twodash")
#geom_line(aes(y = dft$tweet_norm), color="green", linetype="twodash")
# google
table26
# dfw <- data.frame(dfw, Date=index(dfw))
# dfw[,weekly_ret:=weekly.returns, by=list(Date)]
# dfw
#df_google <- df_google[, google_norm:= BBmisc::normalize(google,method = "range", range=c(-1,1))]
dft
#dfw <- dfw[, weekly_ret:= BBmisc::normalize(weekly_ret,method = "range", range=c(-1,1))]
for (i in 1:7){
dfw[, paste('weekly_ret_lead',paste(i),sep=""):=shift(weekly_ret, n=i, fill = NA, type='lead')]
#df_weekly[, paste('ret_lag',paste(i),sep=""):=shift(weekly_ret, n=i, fill = NA, type='lag')]
}
dft<-merge(dfw, df_google, by='Date')
quant_summary = list()
model_results4 = list()
#qs = c(0.17, 0.33, 0.5, 0.67, 0.83)
#qs = c(0,0.2, 0.4, 0.6, 0.8)
#qs = c(0.2,0.4, 0.6, 0.8, 1)
# dft <- dft[, weekly_ret_lead1:= BBmisc::normalize(weekly_ret_lead1,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead2:= BBmisc::normalize(weekly_ret_lead2,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead3:= BBmisc::normalize(weekly_ret_lead3,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead4:= BBmisc::normalize(weekly_ret_lead4,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead5:= BBmisc::normalize(weekly_ret_lead5,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead6:= BBmisc::normalize(weekly_ret_lead6,method = "range", range=c(-1,1))]
# dft <- dft[, weekly_ret_lead7:= BBmisc::normalize(weekly_ret_lead7,method = "range", range=c(-1,1))]
eval(paste('weekly_ret_lead',paste(i)))
for(i in 1:7){
#f <- as.formula(paste('ret ~ ret_lead',paste(i), sep=""))
#f <- as.formula(paste('google_norm~ ','weekly_ret_lead',paste(i), sep=""))
f <- as.formula(paste('weekly_ret_lead',paste(i), '~ google_norm', sep=""))
#f <- as.formula(paste('weekly_ret_lead4 ~ tweet_norm', sep=""))
m = lm(f, data= dft)
model_results4[[i]] = m
}
#quantile(dft$google_norm)
stargazer(model_results4, header=F, type='text',
title=paste('Google Search - Bitcoin (', paste(min(dft$Date)),'-',paste(max(dft$Date)),')'),
omit.stat = c("LL","ser","f"),
covariate.labels =c('Google(t)'),
dep.var.labels=c('R(t+1)', 'R(t+2)', 'R(t+3)', 'R(t+4)','R(t+5)','R(t+6)','R(t+7)'),
omit='Constant',
report = "vc*pt", flip=TRUE)
ggplot(dft, aes(x=Date)) +
geom_line(aes(y = dft$weekly_ret_lead2), color = "darkred") +
geom_line(aes(y = dft$google_norm), color="blue", linetype="twodash")
#geom_line(aes(y = dft$tweet_norm), color="green", linetype="twodash")
